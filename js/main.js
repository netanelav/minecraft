let minecraft = {
  blocks: {
    sky: { type: "sky", tool: "stack" },
    cloud: { type: "cloud", tool: "stack" },
    dirt: { type: "dirt", tool: "shovel" },
    grass: { type: "grass", tool: "shovel" },
    leaf: { type: "leaf", tool: "axe" },
    tree: { type: "tree", tool: "axe" },
    rock: { type: "rock", tool: "pickaxe" }
  },

  tools: {},

  matrix: [
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky",
      "sky"
    ],
    [
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass",
      "grass"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ],
    [
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt",
      "dirt"
    ]
  ]
};

minecraft.createBoard = function() {
  var gameBoard = $("#gameBoard");
  for (var i = 0; i < minecraft.matrix.length; i++) {
    var newRow = document.createElement("div");
    newRow.classList.add("blocks-row");
    newRow.setAttribute("width", "100%");
    gameBoard.append(newRow);
    for (var j = 0; j < minecraft.matrix[i].length; j++) {
      var newBlock = document.createElement("span");
      newBlock.classList.add("block");
      newBlock.setAttribute(
        "block-type",
        minecraft.blocks[minecraft.matrix[i][j]].type
      );
      newBlock.setAttribute(
        "tool",
        minecraft.blocks[minecraft.matrix[i][j]].tool
      );
      // .click(minecraft.clickBlock);
      newRow.append(newBlock);
    }
  }
};

minecraft.createBoard();
var currentTool = "pickaxe";
function chooseTool(eventObject) {
  currentTool = eventObject.currentTarget.id;
  console.log(currentTool);
}
$(".tool").click(chooseTool);
$("#stack").click(chooseTool);

function updateBlockStack(type) {
  document.getElementById("stack").setAttribute("block-type", type);
}

function chooseBlock(eventObject) {
  let type = eventObject.target.getAttribute("block-type");
  console.log(eventObject.target.getAttribute("block-type"));
  if (minecraft.blocks[type].tool === currentTool) {
    console.log("correct tool");
    if (currentTool !== "stack") {
      eventObject.target.setAttribute("block-type", "sky");
      updateBlockStack(type);
    } else {
      let stackType = document
        .getElementById("stack")
        .getAttribute("block-type");
      if (stackType !== "sky") {
        eventObject.target.setAttribute("block-type", stackType);
        document.getElementById("stack").setAttribute("block-type", "sky");
      }
    }
  } else {
    console.log("incorrect tool");
  }
}
$(".block").click(chooseBlock);
